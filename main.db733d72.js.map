{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","tablerows","querySelectorAll","tablerowsArray","Array","from","offices","formFields","capitalise","string","charAt","toUpperCase","slice","listOrder","addEventListener","evt","preventDefault","target","tagName","clickCol","cellIndex","sorted","sort","a","b","itemOne","innerHTML","itemTwo","localeCompare","numeric","forEach","row","appendChild","stopPropagation","rowClass","classList","remove","parentNode","contentEditable","form","createElement","value","add","newEntry","textContent","for","newInput","setAttribute","type","name","officeSelect","office","newOffice","button","insertAdjacentElement","formFilled","formData","FormData","rowToInsert","enteredName","get","enteredAge","enteredPosition","enteredSalary","notification","notificationTitle","message","messageClass","trim","length","append","after","setTimeout","entry","dataToInsert","Number","toLocaleString","push","reset"],"mappings":";AAAA,aA8GA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3GA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYF,SAASC,cAAc,SACnCE,EAAYH,SAASI,iBAAiB,YACtCC,EAAiBC,MAAMC,KAAKJ,GAE5BK,EAAU,CAAhB,QAAA,YAAA,SAAA,WAAA,YAAA,iBAGMC,EAAa,CACT,KAAA,OACI,SAAA,OACF,OAAA,SACH,IAAA,SACG,OAAA,UAGZ,SAASC,EAAWC,GACXA,OAAAA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,GAGvD,IAAIC,GAAY,EAEhBhB,EAAMiB,iBAAiB,QAAS,SAASC,GAGnCA,GAFJA,EAAIC,iBAEuB,OAAvBD,EAAIE,OAAOC,QAAkB,CACzBC,IAAAA,EAAWJ,EAAIE,OAAOG,UAAY,EAElCC,EAASlB,EAAemB,KAAK,SAACC,EAAGC,GAC/BC,IAAAA,EAAUF,EAAExB,cAA8BoB,gBAAAA,OAAAA,IAAYO,UACtDC,EAAUH,EAAEzB,cAA8BoB,gBAAAA,OAAAA,IAAYO,UAExDb,OAAc,IAAdA,EACKY,EAAQG,cAAcD,EAAS,KAAM,CAAEE,QAAS,UAGvC,IAAdhB,EACKc,EAAQC,cAAcH,EAAS,KAAM,CAAEI,QAAS,cADrDhB,IAKNA,GAAaA,EAEbQ,EAAOS,QAAQ,SAAAC,GACb/B,EAAUgC,YAAYD,KAIC,OAAvBhB,EAAIE,OAAOC,UACbH,EAAIkB,kBACJhC,EAAU6B,QAAQ,SAAAI,GAAYA,OAAAA,EAASC,UAAUC,OAAO,YACxDrB,EAAIE,OAAOoB,WAAWF,UAAY,SAClCpB,EAAIE,OAAOqB,iBAAkB,KAIjC,IAAMC,EAAOzC,SAAS0C,cAAc,QAIpC,IAAK,IAAMC,KAFXF,EAAKJ,UAAUO,IAAf,qBAEoBnC,EAAY,CACxBoC,IAAAA,EAAW7C,SAAS0C,cAAc,SAExCG,EAASC,YAAcpC,EAAWiC,GAClCE,EAASE,IAAMJ,EACfF,EAAKP,YAAYW,GAEXG,IAAAA,EAAWhD,SAAS0C,cAAc,SAExCM,EAASC,aAAa,UAAWN,GACjCK,EAASE,KAAOzC,EAAWkC,GAC3BK,EAASG,KAAOR,EAChBE,EAASX,YAAYc,GAEK,WAAtBvC,EAAWkC,IAAqB,WAClCK,EAASV,SAEHc,IAAAA,EAAepD,SAAS0C,cAAc,UAE5CU,EAAaD,KAAO,SACpBC,EAAaH,aAAa,UAAWN,GAErCnC,EAAQwB,QAAQ,SAAAqB,GACRC,IAAAA,EAAYtD,SAAS0C,cAAc,UAEzCY,EAAUX,MAAQU,EAClBC,EAAUR,YAAcO,EACxBD,EAAalB,YAAYoB,KAG3BT,EAASX,YAAYkB,GACrBX,EAAKP,YAAYW,GAjBiB,GAqBtC,IAAMU,EAASvD,SAAS0C,cAAc,UAEtCa,EAAOT,YAAc,gBACrBS,EAAOL,KAAO,SACdK,EAAOlB,UAAUO,IAAI,kBAErBH,EAAKP,YAAYqB,GAEjBxD,EAAMyD,sBAAsB,WAAYf,GAExC,IAAMgB,EAAazD,SAASC,cAAc,sBAE1CwD,EAAWzC,iBAAiB,SAAU,SAASC,GAC7CA,EAAIC,iBAEEwC,IAAAA,EAAW,IAAIC,SAAS1C,EAAIE,QAC5ByC,EAAc5D,SAAS0C,cAAc,MACrCmB,EAAcH,EAASI,IAAI,QAC3BC,EAAaL,EAASI,IAAI,OAC1BE,EAAkBN,EAASI,IAAI,YAC/BG,EAAgBP,EAASI,IAAI,UAEnCF,EAAYX,aAAa,UAAW,WAE9BiB,IAAAA,EAAelE,SAAS0C,cAAc,OACtCyB,EAAoBnE,SAAS0C,cAAc,OAEjDwB,EAAajB,aAAa,UAAW,gBACrCiB,EAAa7B,UAAUO,IAAI,gBAC3BuB,EAAkB9B,UAAUO,IAAI,SAE5BwB,IAAAA,EAAU,sDACVC,EAAe,UA+BfA,GA7BAR,EAAYS,OAAOC,OAAS,IAC9BH,EAAU,6DACVC,EAAe,SAGbL,GAAmB,IACrBI,EAAU,2BACVC,EAAe,UAGbN,EAAa,IAAMA,EAAa,MAClCK,EAAU,kDACVC,EAAe,SAGbJ,GAAiB,IACnBG,EAAU,gCACVC,EAAe,SAGjBF,EAAkBrB,YAAcsB,EAChCF,EAAa7B,UAAUO,IAAIyB,GAC3BH,EAAaM,OAAOL,GACpB1B,EAAKgC,MAAMP,GAEXQ,WAAW,WACTR,EAAa5B,UACZ,KAEkB,YAAjB+B,EAA4B,CACVX,IADU,EACVA,EAAAA,EAAAA,GADU,IACA,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBiB,IAAAA,EAAmB,EAAA,MACtBC,EAAe5E,SAAS0C,cAAc,MAE3B,WAAbiC,EAAM,KACRA,EAAM,GAAK,IAAME,OAAOF,EAAM,IAAIG,kBAGpCF,EAAa9B,YAAcpC,EAAWiE,EAAM,IAC5Cf,EAAY1B,YAAY0C,IATI,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAY9B1E,EAAUgC,YAAY0B,GACtBvD,EAAe0E,KAAKnB,GAEpB3C,EAAIE,OAAO6D","file":"main.db733d72.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\nconst tablerows = document.querySelectorAll('tbody tr');\nconst tablerowsArray = Array.from(tablerows);\n\nconst offices = [`Tokyo`, `Singapore`,\n  `London`, `New York`, `Edinburgh`, `San Francisco`];\n\nconst formFields = {\n  'name': 'text',\n  'position': 'text',\n  'office': 'select',\n  'age': 'number',\n  'salary': 'number',\n};\n\nfunction capitalise(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nlet listOrder = true;\n\ntable.addEventListener('click', function(evt) {\n  evt.preventDefault();\n\n  if (evt.target.tagName === 'TH') {\n    const clickCol = evt.target.cellIndex + 1;\n\n    const sorted = tablerowsArray.sort((a, b) => {\n      const itemOne = a.querySelector(`td:nth-child(${clickCol}`).innerHTML;\n      const itemTwo = b.querySelector(`td:nth-child(${clickCol}`).innerHTML;\n\n      if (listOrder === true) {\n        return itemOne.localeCompare(itemTwo, 'en', { numeric: 'true' });\n      }\n\n      if (listOrder === false) {\n        return itemTwo.localeCompare(itemOne, 'en', { numeric: 'true' });\n      }\n    });\n\n    listOrder = !listOrder;\n\n    sorted.forEach(row => {\n      tableBody.appendChild(row);\n    });\n  }\n\n  if (evt.target.tagName === 'TD') {\n    evt.stopPropagation();\n    tablerows.forEach(rowClass => rowClass.classList.remove('active'));\n    evt.target.parentNode.classList = 'active';\n    evt.target.contentEditable = true;\n  }\n});\n\nconst form = document.createElement('form');\n\nform.classList.add(`new-employee-form`);\n\nfor (const value in formFields) {\n  const newEntry = document.createElement('label');\n\n  newEntry.textContent = capitalise(value);\n  newEntry.for = value;\n  form.appendChild(newEntry);\n\n  const newInput = document.createElement('input');\n\n  newInput.setAttribute('data-qa', value);\n  newInput.type = formFields[value];\n  newInput.name = value;\n  newEntry.appendChild(newInput);\n\n  if (formFields[value] === 'select') {\n    newInput.remove();\n\n    const officeSelect = document.createElement('select');\n\n    officeSelect.name = 'office';\n    officeSelect.setAttribute('data-qa', value);\n\n    offices.forEach(office => {\n      const newOffice = document.createElement('option');\n\n      newOffice.value = office;\n      newOffice.textContent = office;\n      officeSelect.appendChild(newOffice);\n    });\n\n    newEntry.appendChild(officeSelect);\n    form.appendChild(newEntry);\n  }\n}\n\nconst button = document.createElement('button');\n\nbutton.textContent = 'Save to table';\nbutton.type = 'submit';\nbutton.classList.add('button__select');\n\nform.appendChild(button);\n\ntable.insertAdjacentElement('afterend', form);\n\nconst formFilled = document.querySelector('.new-employee-form');\n\nformFilled.addEventListener('submit', function(evt) {\n  evt.preventDefault();\n\n  const formData = new FormData(evt.target);\n  const rowToInsert = document.createElement('tr');\n  const enteredName = formData.get('name');\n  const enteredAge = formData.get('age');\n  const enteredPosition = formData.get('position');\n  const enteredSalary = formData.get('salary');\n\n  rowToInsert.setAttribute('data-qa', 'success');\n\n  const notification = document.createElement('div');\n  const notificationTitle = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add('notification');\n  notificationTitle.classList.add('title');\n\n  let message = 'All field are correct and the table will be updated';\n  let messageClass = 'success';\n\n  if (enteredName.trim().length < 4) {\n    message = 'Text entries must be longer than four characters in length';\n    messageClass = 'error';\n  }\n\n  if (enteredPosition <= 0) {\n    message = 'Position must be entered';\n    messageClass = 'error';\n  }\n\n  if (enteredAge < 18 || enteredAge > 90) {\n    message = 'Age entry must be between 18 years and 90 years';\n    messageClass = 'error';\n  }\n\n  if (enteredSalary <= 0) {\n    message = 'Salary must be zero or above.';\n    messageClass = 'error';\n  }\n\n  notificationTitle.textContent = message;\n  notification.classList.add(messageClass);\n  notification.append(notificationTitle);\n  form.after(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n\n  if (messageClass === 'success') {\n    for (const entry of formData) {\n      const dataToInsert = document.createElement('td');\n\n      if (entry[0] === 'salary') {\n        entry[1] = '$' + Number(entry[1]).toLocaleString();\n      }\n\n      dataToInsert.textContent = capitalise(entry[1]);\n      rowToInsert.appendChild(dataToInsert);\n    }\n\n    tableBody.appendChild(rowToInsert);\n    tablerowsArray.push(rowToInsert);\n\n    evt.target.reset();\n  }\n});\n"]}